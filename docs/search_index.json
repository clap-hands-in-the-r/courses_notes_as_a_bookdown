[["index.html", "A Minimal Book Example Chapter 1 About 1.1 Usage 1.2 Render book 1.3 Preview book", " A Minimal Book Example John Doe 2023-08-30 Chapter 1 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports; for example, a math equation \\(a^2 + b^2 = c^2\\). 1.1 Usage Each bookdown chapter is an .Rmd file, and each .Rmd file can contain one (and only one) chapter. A chapter must start with a first-level heading: # A good chapter, and can contain one (and only one) first-level heading. Use second-level and higher headings within chapters like: ## A short section or ### An even shorter section. The index.Rmd file is required, and is also your first book chapter. It will be the homepage when you render the book. 1.2 Render book You can render the HTML version of this example book without changing anything: Find the Build pane in the RStudio IDE, and Click on Build Book, then select your output format, or select “All formats” if you’d like to use multiple formats from the same book source files. Or build the book from the R console: bookdown::render_book() To render this example to PDF as a bookdown::pdf_book, you’ll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. 1.3 Preview book As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book”, or from the R console: bookdown::serve_book() "],["learning-r.html", "Chapter 2 Learning R 2.1 About stringr package 2.2 About Regex in R 2.3 Useful packages or datasets 2.4 Useful libraries", " Chapter 2 Learning R This is notes about learning R. Please build this simple boook!!!!! ahhhhhhhhhhhhha 2.1 About stringr package Stringr is more coherent than base R functions for strings treatments. Stringr functions always begin with prefix str_ ; the first argument is always the string you want to treat. And then comes the pattern you want to identify. Most common and useful functions in Stringr : str_detect() -&gt; returns a logical vector (a vector of TRUE and FALSE) str_subset() str_view() str_view_all() str_replace() str_replace_all() str_split() str_trim() str_to_lower() 2.2 About Regex in R 2.2.1 Special characters \\\\d stands for one of any digit 0,1,2, up to 9 \\\\s stands for one charater whitespace The dot “.” matches any character So, to match a literal dot “.” in regex, we need two backslashes then dot \\\\. The star “*” stands for 0 or more instances of the previous character The plus sign “+” stands for 1 or more instances of the previous character The question mark “?” stands for 0 or one instance of the previous character () () “\\\\1” capture le groupe de la parenthèse 1 et “\\\\2” capture le groupe de la parenthèse 2 Separate and extract function are from tidyr package. In extract, you can use regex to split a string. library(dplyr) library(tidyr) s &lt;- c(&quot;5&#39;6&quot;, &quot;6&#39;4&quot;) tab &lt;- data.frame(x = s) tab %&gt;% separate(x,c(&quot;feet&quot;,&quot;inches&quot;),sep=&quot;&#39;&quot;) ## feet inches ## 1 5 6 ## 2 6 4 tab %&gt;% extract(x,c(&quot;feet&quot;,&quot;inches&quot;), regex = &quot;(\\\\d)&#39;(\\\\d{1,2})&quot;) ## feet inches ## 1 5 6 ## 2 6 4 2.3 Useful packages or datasets gapminder library(gapminder) data(“gapminder”) 2.4 Useful libraries It maybe possible to extract a table from a pdf with pdftools Not tested myself library(“pdftools”) temp_file &lt;- tempfile() url &lt;- “https://www.pnas.org/action/downloadSupplement?doi=10.1073%2Fpnas.1510159112&amp;file=pnas.201510159SI.pdf” download.file(url, temp_file) txt &lt;- pdf_text(temp_file) file.remove(temp_file) "],["learning-python.html", "Chapter 3 Learning Python", " Chapter 3 Learning Python shebang line #!/usr/bin/env python3 "],["learning-gitgithub.html", "Chapter 4 Learning Git/Github", " Chapter 4 Learning Git/Github git config user.name “my_name” git config user.email “me@example.com” git config – global user.name “my_name” -&gt; set the value of the username for all git repos whereas if “git config” without global you set it up for the current directory git init -&gt; when in the directory which you want to set under git control (initialize a new repo) git add myfile -&gt; stagge myfile (place it in the stagging area) git commit -m “my message for this commit” git config -l git status -&gt; check current state three status for tracked files : modified/stagged/commited in order to vizualize all the commits (not all the modifications) which were made : git log Admit you modified a file readme.txt which is under version control. You can see the modifications since the previous version with this command line: git diff readme.txt Add a file to .gitignore in order it is not tracked anymore(?) echo 01-Learning-R.Rmd &gt; .gitignore echo .RData &gt;&gt; .gitignore after modifying .gitignore you need to stagge (git add) and commit (git commit) it. git commit -a -m ‘message for the commit’ when you want to commit only the modifications (a is for only modified files / m is for message) git rm filename after this you must commit git mv filename in order to move or rename a file "],["footnotes-and-citations.html", "Chapter 5 Footnotes and citations 5.1 Footnotes 5.2 Citations", " Chapter 5 Footnotes and citations 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2023) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["learning-markdown.html", "Chapter 6 Learning Markdown", " Chapter 6 Learning Markdown In markdown you need to escape twice the backslash in order to display two backslashes So what you see here, I wrote it with four not just three : \\\\ To write a list, you must write a star * followed by a coma a the beginning of a line. Before the list starts you need a blankline and same at the end of the list otherwise Mardown won’t recognize it. To introduce a return to the ligne, you need not only to type return in Markdown, but also to make the line followed by two spaces. To make a few words bold you need to surrender it with two stars both sides. It is **bold** gives : It is bold "],["learning-linux-commands.html", "Chapter 7 Learning linux commands", " Chapter 7 Learning linux commands git –version mkdir -&gt; create a directory cat to read a file or less (type q in order to exit less viewer) why less? because previous version of less was more :) write in a file : echo toto et tata &gt; toto.txt echo toto et titi &gt; titi.txt differences between two files: diff toto.txt titi.txt or diff -u toto.txt titi.txt diff -u is more readable than simple diff command. Create a diff file: diff -u toto.txt titi.txt &gt; change.diff Patch the .diff file: patch titi.txt &lt; change.diff Clear the console: just as in Rstudio ctrl+l or typing “clear” and then enter in the console. both works Content of a directory: dir or ls : both works. Content of a directory including hidden files: dir -a ls -a from the help of ls : ” -a, –all do not ignore entries starting with.” Add the options l to see rights on the files: ls -la Get the help in git bash on windows: function –help example: ls –help Make a file executable: chmod +x filename Open a file with nano : nano my_file.txt Save changes made to a file in nano: ctrl+o + Enter + ctrl+x ‘cd -’ in order to come back to previous directory "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
